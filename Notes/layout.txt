


main calls parent
parent initializes:
    shared memory
    opens text file
    opens command file
    semaphore table
    starts loop
    create hashmap with timestamp as key based on command file and close commandfile
    shared data(current loop time, current children running )

parent enters main mode:
    starts looping // maybe i is always in shared memory?

        check map for commands that should be executed in curr timestamp
            terminate old processes
            check if semaphore available
            create new proccesses
        assumption: only 1 message sent per loop
        check available children
        send a message
        if T was called last loop receive exit codes


todo:harder tests
todo: increase semaphore limit


todo:make terminates go through
todo: free mallocs
todo: check shm/semas
todo: check shm/semas fds
todo: random lines instead of 1 at a time

todo: major cleanup
todo: move some function to other files

5-3-S
32-6-S
44-6-T
834-4-S
5-7-S
32-35-S
32-32-S
32-42-S
32-1-S
32-12-S
8-3-T
40-7-T
43-34-T
5-9-S
5-2-S


5-3-S
6-2-T
7-3-T
7-6-S
8-9-S

Terminates:
Timestamp:8/3-[1]
Timestamp:40/7-[1]
Timestamp:43/34-[1]
Timestamp:44/6-[1]
Spawns:
Timestamp:5/3-7-9-2-[4]
Timestamp:32/6-35-32-42-1-12-[6]
Timestamp:834/4-[1]